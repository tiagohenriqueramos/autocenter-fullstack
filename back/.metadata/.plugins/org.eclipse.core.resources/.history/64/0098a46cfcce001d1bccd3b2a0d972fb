package br.com.tiagohenriqueramos.autocenter.controller;

import java.io.Serializable;
import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import br.com.tiagohenriqueramos.autocenterfullstack.entities.Agendamento;
import br.com.tiagohenriqueramos.autocenterfullstack.service.AgendamentoService;
@CrossOrigin(origins = "*")
@RestController
@RequestMapping(value = "/agendamentos")
public class AgendamentoController implements Serializable {

	private static final long serialVersionUID = 1L;

	@Autowired
	AgendamentoService agendamentoService;

	@GetMapping
	public ResponseEntity<List<Agendamento>> listarTodos() {
		List<Agendamento> lista = agendamentoService.listarAgendamentos();
		return ResponseEntity.ok().body(lista);
	}

	@GetMapping(value = "/{id}")
	public ResponseEntity<Agendamento> encontrarPorId(@PathVariable Long id) {
		Agendamento agendamento = agendamentoService.buscarPorId(id);
		return ResponseEntity.ok().body(agendamento);

	}
	@PostMapping
	public ResponseEntity<Agendamento> cadastrar(@RequestBody Agendamento agendamento) {
		agendamento = agendamentoService.cadastrarAgendamento(agendamento);
		URI uri = ServletUriComponentsBuilder.fromPath("/{id}").buildAndExpand(agendamento.getId()).toUri();
		return ResponseEntity.created(uri).body(agendamento);
	}
	@DeleteMapping(value = "/{id}")
	public ResponseEntity<Void> deletar(@PathVariable Long id){
		agendamentoService.deletarAgendamento(id);
		return ResponseEntity.noContent().build();
	}
	
	@PutMapping(value = "/{id}")
	public ResponseEntity<Agendamento> editar(@PathVariable Long id, @RequestBody Agendamento agendamento){
		agendamento = agendamentoService.editarAgendamento(id, agendamento);
		return ResponseEntity.ok().body(agendamento);		
	}
	
	
}
