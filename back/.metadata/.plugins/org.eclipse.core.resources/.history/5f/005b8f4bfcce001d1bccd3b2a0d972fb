package br.com.tiagohenriqueramos.autocenterfullstack.controller;

import java.io.Serializable;
import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import br.com.tiagohenriqueramos.autocenterfullstack.entities.Veiculo;
import br.com.tiagohenriqueramos.autocenterfullstack.service.VeiculoService;
@CrossOrigin(origins = "*")
@RestController
@RequestMapping(value = "/veiculos")
public class VeiculoController implements Serializable {

	private static final long serialVersionUID = 1L;

	@Autowired
	VeiculoService veiculoService;

	@GetMapping
	public ResponseEntity<List<Veiculo>> listarTodos() {
		List<Veiculo> lista = veiculoService.listarVeiculos();
		return ResponseEntity.ok().body(lista);
	}

	@GetMapping(value = "/{id}")
	public ResponseEntity<Veiculo> encontrarPorId(@PathVariable Long id) {
		Veiculo veiculo = veiculoService.buscarPorId(id);
		return ResponseEntity.ok().body(veiculo);

	}

	@PostMapping
	public ResponseEntity<Veiculo> cadastrar(@RequestBody Veiculo veiculo) {
		veiculo = veiculoService.cadastrarVeiculo(veiculo);
		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(veiculo.getId())
				.toUri();
		return ResponseEntity.created(uri).body(veiculo);
	}
	@DeleteMapping(value = "/{id}")
	public ResponseEntity<Void> deletar(@PathVariable Long id){
		veiculoService.deletarVeiculo(id);
		return ResponseEntity.noContent().build();
	}
	@PutMapping(value = "/{id}")
	public ResponseEntity<Veiculo> editar(@PathVariable Long id, @RequestBody Veiculo veiculo){
		veiculo = veiculoService.editarVeiculo(id, veiculo);
		return ResponseEntity.ok().body(veiculo);		
	}

}
